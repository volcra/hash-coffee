apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'codenarc'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.volcra.hash'
version = '0.1.0-SNAPSHOT'
ext.packaging = 'jar'
mainClassName = 'org.volcra.coffeescript.compiler.Main'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    all*.exclude module: 'commons-logging'
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.1:indy'
    compile 'org.mozilla:rhino:1.7R5'
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'commons-cli:commons-cli:1.2'
    compile 'commons-io:commons-io:2.4'

    runtime 'org.slf4j:jcl-over-slf4j:1.7.10'
    runtime 'org.slf4j:slf4j-jdk14:1.7.10'

    testCompile 'junit:junit:4.12'
}

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task coffee(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.volcra.coffeescript.compiler.Main'
}

assemble.dependsOn installDist

artifacts {
    archives jar
    archives groovydocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            customizePom pom, project
        }
    }
}

install {
    repositories.mavenInstaller {
        customizePom pom, project
    }
}

def customizePom(pom, gradleProject) {
    pom.whenConfigured { generatedPom ->
        // eliminate test-scoped dependencies (no need in maven central poms)
        generatedPom.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // sort to make pom dependencies order consistent to ease comparison of older poms
        generatedPom.dependencies = generatedPom.dependencies.sort { dep ->
            "$dep.scope:$dep.groupId:$dep.artifactId"
        }

        // add all items necessary for maven central publication
        generatedPom.project {
            name = gradleProject.description
            description = gradleProject.description
            url = "https://github.com/volcra/hash-coffee"
            inceptionYear '2015'
            organization {
                name = "Volcra"
                url = "https://github.com/volcra/hash-coffee"
            }
            licenses {
                license {
                    name "The Apache Software License, Version 2.0"
                    url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution "repo"
                }
            }
            scm {
                url = "https://github.com/volcra/hash-coffee"
                connection = "scm:git:git@github.com:volcra/hash-coffee.git"
                developerConnection = "scm:git:git@github.com:volcra/hash-coffee.git"
            }
            developers {
                developer {
                    id = "ciraxwe"
                    name = "Emanuelle Garduno"
                    email = "emanuelle.garduno@volcra.com"
                }
            }
            issueManagement {
                system = "GitHub"
                url = "https://github.com/volcra/hash-coffee/issues"
            }
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

startScripts {
    applicationName = '#coffee'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
